http://www.1point3acres.com/bbs/thread-186725-1-1.html

OA1:

注册一亩三分地论坛，查看更多干货！
您需要 登录 才可以下载或查看，没有帐号？Sign Up 注册获取更多干货

x
本帖最后由 wrj5518 于 2016-4-16 05:10 编辑


刚做完OA2 把OA1和2的问题+答案都post出来吧~ 攒人品。
/******************************************************************* 叫我分割线********************************************************************************/
Intern Pre-Screen(OA1)
第一题是找到重复字符对里属于重复字符对的第一个字母……是不是很难理解……也就是ABBA返回第一个A。.本文原创自1point3acres论坛
不说了，上代码。这个题输入输出自己研究一下……提前
char findFirstRepeatingChar(string s) {
    vector<int> record (128, 0);.1point3acres网
    for(int i = 0; i < s.size(); ++i) {
        record[(int)s[i]]++;
    }
    for(int i = 0; i < s.size(); ++i) {
        if(record[(int)s[i]] > 1)
            return s[i];
    }
    
    return ' ';
}. 围观我们@1point 3 acres
复制代码
第二题判断一个三角形是不是等腰三角形，等边三角形或者不是三角形和其他三角形……额
不说了，上代码。
#include <iostream>. from: 1point3acres 
using namespace std;
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    int lines;
    cin >> lines;
    for(int i = 0; i < lines; ++i) {
        int a, b, c;
        cin >> a >> b >> c;
        //illegal check
        if(a < 0 || b < 0 || c < 0) {. 一亩-三分-地，独家发布
            cout << "None of these" << endl;
            continue;
        }
        // classify
        if(a + b <= c || b + c <= a || a + c <= b)
            cout << "None of these" << endl;
        else if(a == b && b == c)
            cout << "Equilateral" << endl;
        else if(a == b || b == c || a == c)-google 1point3acres
            cout << "Isosceles" << endl;
        else. From 1point 3acres bbs
            cout << "None of these" << endl;
    }. 围观我们@1point 3 acres
    return 0;
}
复制代码
/******************************************************************* 叫我分割线********************************************************************************/
Fidessa C++ Development Test 7 (Intern)
楼主做完……趴的HTML趴出来……噗……不让点右键复制……逗我呢？
第一题
At an airport, you have a timetable for arrivals and departures. You need to determine the minimum number of gates you’d need to provide so that all the planes can be placed at a gate as per their schedule.. From 1point 3acres bbs

The arrival and departure times for each plane are presented in two arrays, sorted by arrival time, and you’re told the total number of flights for the day.  Assume that no planes remain overnight at the airport; all fly in and back out on the same day.  Assume that if a plane departs in the same minute as another plane arrives, the arriving plane takes priority (i.e. you'll still need the gate for the departing plane); Write a function that returns the minimum number of gates needed for the schedules you're given.

Example:
arr[] = {900, 940, 950, 1100, 1500, 1800}
dep[] = {910, 1200, 1120, 1130, 1900, 2000}. 牛人云集,一亩三分地

flights = 6

In this example the return value should be 3 since the schedules for at most 3 planes overlap.
Arrive 9:00 -> 1 gate
Depart 9:10 -> 0 gates
Arrive 9:40 -> 1 gate
Arrive 9:50 -> 2 gates
Arrive 11:00 -> 3 gates
Depart 11:20 -> 2 gates. 牛人云集,一亩三分地
Depart 11:30 -> 1 gate
Depart 12:00 -> 0 gates.1point3acres网
Arrive 15:00 -> 1 gate
Arrive 18:00 -> 2 gates-google 1point3acres
Depart 19:00 -> 1 gate. 1point3acres
Depart 20:00 -> 0 gates
.1point3acres网
不说了，直接蹦代码……
. visit 1point3acres for more.
int findMinGates(vector < int > arrivals, vector < int > departures, int flights) {
    sort(arrivals.begin(), arrivals.end());
    sort(departures.begin(), departures.end());
    
    int res = 1, max = 1;
    int i = 1, j = 0;
    
    while (i < flights && j < flights) {
        if (arrivals[i] <= departures[j]) {
            ++res;
            if (res > max) {
                max = res;. from: 1point3acres 
            }. 1point 3acres 论坛
            ++i;
        } 来源一亩.三分地论坛. 
        else {
            --res;
            ++j;
        }
    }. visit 1point3acres for more.
    return max;
}. Waral 博客有更多文章,
复制代码
第二题
You are given a String, input , comprised of alphabetical letters with varying case.

These letters should create pairs with one another, based on case.  For example, the letter 'A' forms a "matching pair" with the letter 'a', in that order

Rules:
The first letter must be upper-case.
Every upper-case letter must be followed by its lower-case version or any upper-case letter.
When an upper-case letter is followed by its lower-case version, those two letters are considered a "matching pair" and can then be disregarded  from further match consideration.
If any of these rules are broken or a lower-case letter is encountered that does not create a "matching pair" with its nearest un-matched left neighbour, that letter and all following letters are considered "un-matched".

Output:
Your method should return the zero-based index of the last matching lower-case letter, or -1 if no pairs exist.

Limits:
0 < input length < 10,000 characters
The optimal method has a running time of O(input length).

Sample input #1
ABba
Sample output #1
3
Sample explanation #1
'A' is an upper-case letter.
'A' is followed by an upper-case letter, 'B'.. visit 1point3acres for more.
'B' is followed by its lower-case version 'b' and form a "matching pair".
'a' forms a "matching pair" with 'A' ('B' and 'b' are already matched and therefore are disregarded).
Last matching index is 3.

Sample input #2. 围观我们@1point 3 acres
ABbCca
Sample output #2
5
Sample explanation #2
'A' is an upper-case letter.. 1point 3acres 论坛
'A' is followed by an upper-case letter, 'B'.
'B' is followed by its lower-case version 'b' and form a "matching pair".
'b' is followed by any upper-case letter, 'C'.
'C' is followed by its lower-case version 'c' and form a "matching pair".
'a' forms a "matching pair" with 'A' ('B', 'b' and 'C', 'c' are already matched and therefore are disregarded).
Last matching index is 5.w. more info on 1point3acres

Sample input #3
ABbba
Sample output #3
2
Sample explanation #3
'A' is an upper-case letter.
'A' is followed by an upper-case letter, 'B'.
'B' is followed by its lower-case version 'b' and form a "matching pair".. 
'b' does not pair with 'A' ('B' and 'b' are already matched and therefore are disregarded), therefore index 3 and all following letters are 'un-matched'.
Last matching index is 2.

int findMatchingPair(const string& input) {
    int res = -1;
    vector<char> S;
    for(int i = 0; i < input.size(); ++i) {
        if(!isalpha(input[i])) break;. from: 1point3acres 
        
        if(isupper(input[i])) {
            S.push_back(input[i]); 来源一亩.三分地论坛. 
        }
        else {
            if(S.empty()) break;
            else {
                if(S.back() == toupper(input[i])) {
                    res = i;
                    S.pop_back();
                }
                else
                    break;
            }
        }
    }
    return res;
}


